openapi: 3.0.1
info:
  title: WhoKnows2.0
  version: '2.0'
paths:
  /:
    get:
      tags:
        - Frontend
      summary: Serve Root Page
      operationId: serve_root_page__get
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  /register:
    get:
      tags:
        - Frontend
      summary: Serve Register Page
      operationId: serve_register_page_register_get
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  /login:
    get:
      tags:
        - Frontend
      summary: Serve Login Page
      operationId: serve_login_page_login_get
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  /weather:
    get:
      tags:
        - Frontend
      summary: Serve Weather Page
      operationId: server_weather_page_weather_get
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  /api/register:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterDTO'
      responses:
        '200':
          description: Success
  /api/login:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
      responses:
        '200':
          description: Success
  /api/logout:
    get:
      tags:
        - Auth
      responses:
        '200':
          description: Success
  /api/is-logged-in:
    get:
      tags:
        - Auth
      responses:
        '200':
          description: Success
  /api/search:
    get:
      tags:
        - Search
      operationId: GetSearch
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: language
          in: query
          schema:
            type: string
            default: en
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page'
  /api/weather:
    get:
      tags:
        - Weather
      operationId: GetWeather
      parameters:
        - name: latitude
          in: query
          schema:
            type: number
            format: double
        - name: longitude
          in: query
          schema:
            type: number
            format: double
        - name: city
          in: query
          schema:
            type: string
        - name: country
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WeatherDTO'
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/WeatherDTO'
components:
  schemas:
    LoginDTO:
      required:
        - password
        - username
      type: object
      properties:
        username:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
      additionalProperties: false
    Page:
      required:
        - content
        - language
        - title
        - url
      type: object
      properties:
        title:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
          format: uri
        language:
          maxLength: 10
          minLength: 0
          type: string
        lastUpdated:
          type: string
          format: date-time
        content:
          minLength: 1
          type: string
      additionalProperties: false
    RegisterDTO:
      required:
        - email
        - password
        - username
      type: object
      properties:
        username:
          minLength: 1
          type: string
        email:
          minLength: 1
          type: string
          format: email
        password:
          minLength: 1
          type: string
        password2:
          type: string
          nullable: true
      additionalProperties: false
    WeatherDTO:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        time:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        temperatureUnit:
          type: string
          nullable: true
        temperatureValue:
          type: number
          format: double
        windSpeedUnit:
          type: string
          nullable: true
        windSpeedValue:
          type: number
          format: double
      additionalProperties: false
